// Generated by Selenium IDE
//blibliotecas


const { Builder, By /*seletor*/ } = require('selenium-webdriver')
const assert = require('assert')
require('chromedriver')

//suite de testes
describe('Comprar Passagem', function () {  // describe > cria grupo de itens dentro dele
    //this.timeout(30000)
    let driver
    let vars                //lista pra guardar variaveis e informações

    // Antes de cada teste - inicialização - Setup
    beforeEach(async function () {
        // Instancia o Webdriver para controlar o chrome driver
        driver = await new Builder().forBrowser('chrome').build()
        driver.manage().setTimeouts({ implicit: 60000 })           // define espera
        vars = {}           // inicializa a lista como vazia
    })

    // Despois de cada teste - Finalização  - TearDown
    afterEach(async function () {
        await driver.quit();
    })

    // O teste
    it('Comprar Passagem', async function () {
        await driver.get("https://www.blazedemo.com/")                                  // abre o site alvo - SUT: Software Under Test
        await driver.manage().window().setRect({ width: 1296, height: 696 })            // await: roda mais rápido  // setTect: tamanho da janela
        await driver.findElement(By.name("fromPort")).click()                           // clica no combo origem de voo
        // selecionando o combo de origem e escolhendo a opção Sao paolo
        {

            const dropdown = await driver.findElement(By.name("fromPort"))
            await dropdown.findElement(By.xpath("//option[. = 'São Paolo']")).click()
        }
        await driver.findElement(By.name("toPort")).click()
        // selecionando o combo de origem e escolhendo a opção Cairo   
        {
            const dropdown = await driver.findElement(By.name("toPort"))                  // clica no combo origem de voo
            await dropdown.findElement(By.xpath("//option[. = 'Cairo']")).click()
        }
        await driver.findElement(By.css(".btn-primary")).click()
        // carrega a pagina com lista
        // seleciona o voo que está na primeira linha da tabela


        await driver.findElement(By.css("tr:nth-child(1) .btn")).click()
        // carrega  a pagina de pagamento
        // Preencher os campos do formulario

        // seleciona a bandeira do cartão (cardType)
        await driver.findElement(By.id("cardType")).click()
        {

            const dropdown = await driver.findElement(By.id("cardType"))
            await dropdown.findElement(By.xpath("//option[. = 'American Express']")).click()

        }

        // clica no check box Lembre-se de Mim (Remember Me)

        await driver.findElement(By.id("rememberMe")).click()
        await driver.findElement(By.id("inputName")).click()
        await driver.findElement(By.id("inputName")).sendKeys("Juca Pato")
        await driver.findElement(By.css(".control-group:nth-child(2)")).click()
        await driver.findElement(By.css(".btn-primary")).click()
        assert(await driver.findElement(By.css("h1")).getText() == "Thank you for your purchase today!")
        assert(await driver.findElement(By.css("tr:nth-child(3) > td:nth-child(2)")).getText() == "555 USD")
    })
})